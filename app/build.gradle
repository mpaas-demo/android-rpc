// inside 方式
if (mPaasBuildType == 'inside') {
    // inside 方式通过下面两个 plugin 和 mpaas_packages.json 管理依赖，并打包配置
    apply plugin: 'com.alipay.portal'
    apply plugin: 'com.alipay.apollo.baseline.update'
    portal {
        mergeAssets true
    }
}
// aar 方式
if (mPaasBuildType == 'aar') {
    apply plugin: 'com.android.application'
    // aar 方式通过下面 plugin 打包配置
    apply plugin: 'com.alipay.apollo.baseline.config'
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.mpaas.demo"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters "armeabi"
        }
    }
    signingConfigs {
        release {
            keyAlias 'mpaas123'
            keyPassword 'mpaas123'
            storeFile file('mpaas_keystore.jks')
            storePassword 'mpaas123'
        }
        debug {
            keyAlias 'mpaas123'
            keyPassword 'mpaas123'
            storeFile file('mpaas_keystore.jks')
            storePassword 'mpaas123'
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    implementation 'com.android.support:support-v13:26.+'
    // aar 方式通过 bom pom 管理依赖
    if (mPaasBuildType == 'aar') {
        // 基线 bom
        implementation platform('com.mpaas.android:mpaas-baseline:10.1.68-1')
        // rpc pom
        implementation 'com.mpaas.android:rpc'
        annotationProcessor "com.mpaas.mobile:metainfo-compiler:1.3.0"
    }
}

// 内部测试使用，开发者无需关注
println rootProject.file('./diagnose.gradle').getAbsoluteFile()
if (rootProject.file('./diagnose.gradle').exists()) {
    apply from: '../diagnose.gradle'
}

